;@+leo-ver=4-thin
;@+node:gcross.20080918151436.5:@thin reduced-trihexagonal-compass.logo
;@@language logo
;@@comment ;

prologue

;@+others
;@+node:gmc.20080919000357.5:dot
to dot
    pd pw 10 fd 1 pu bk 1 pw 5 pd
end
;@-node:gmc.20080919000357.5:dot
;@+node:gmc.20080919000357.3:drawX
to drawX_with_middle_dot
    pd pc "blue fd 50 pu bk 50
    pd pc "red lt 60 fd 50 pc "black dot pc "red fd 50 pc "black dot
       pc "blue lt 120 fd 50 pc "black dot
       pc "green lt 120 fd 50 pc "black pc "green fd 50 lt 60
end

to drawX
    pd pc "blue fd 50 pu bk 50
    pd pc "red lt 60 fd 100 pc "black dot
       pc "blue lt 120 fd 50 pc "black dot
       ;pc "green lt 120 fd 100 lt 60
       pc "red lt 120 fd 100 lt 60
end

to drawXes :number
    repeat (difference :number 1) [
        pc "black dot
        drawX
        pc "black dot
        pc "blue fd 50
    ]
    pc "black dot
    drawX
    pc "black dot
end
;@-node:gmc.20080919000357.3:drawX
;@+node:gmc.20080919000357.17:goto_next_row
to goto_next_row
    pu setx 0 lt 60 fd 50 lt 60 fd 50 rt 120
end
;@-node:gmc.20080919000357.17:goto_next_row
;@+node:gmc.20080919000357.18:draw_row
to draw_row
    pu fd first :offsets
    drawXes first :Xcounts
    make :offsets rotate :offsets
    make :Xcounts rotate :Xcounts
end
;@-node:gmc.20080919000357.18:draw_row
;@-others

home

penwidth 5

make :floorwidth (difference :width (remainder :width 2))
make :ceilwidth (sum :width (remainder :width 2))

make :floorheight (difference :height (remainder :height 2))
make :ceilheight (sum :height (remainder :height 2))

;@<< Bottom row >>
;@+node:gmc.20080919000357.4:<< Bottom row >>
pd pc "black dot

pd pc "red lt 60 fd 100 pu bk 100 rt 60

pd pc "blue fd 100 pc "black dot

drawXes (difference (quotient :floorwidth 2) 1)

test equal? :floorwidth :width
iff [
    pd pc "blue fd 100 pc "black dot 
    ;pd pc "green lt 120 fd 100 pu bk 100 rt 120
    pd pc "red lt 120 fd 100 pu bk 100 rt 120
]

goto_next_row
;@-node:gmc.20080919000357.4:<< Bottom row >>
;@nl

;@<< Middle rows >>
;@+node:gmc.20080919000357.6:<< Middle rows >>
make :offsets (list 50 0)
make :secondrow true
make :Xcounts (list (quotient :floorwidth 2) (quotient :ceilwidth 2))

repeat (difference :height 2) [ draw_row goto_next_row ]

;@-node:gmc.20080919000357.6:<< Middle rows >>
;@nl

;@<< Top row >>
;@+node:gmc.20080919000357.19:<< Top row >>
test equal? 0 (remainder :height 2) ift [
    make :Xcounts (list (difference (quotient :ceilwidth 2) 1 ) )
    draw_row goto_next_row
    pu pc "blue
    repeat first :Xcounts [ fd 50 pu fd 50 pd ]
] iff [
    pu fd 50 pc "black dot
    ;pd pc "green lt 120 fd 100 pc "black dot pu bk 100 rt 120 fd 50
    pd pc "red lt 120 fd 100 pc "black dot pu bk 100 rt 120 fd 50
    make :Xcounts (list (difference (last :Xcounts) 1))
    draw_row
    pu fd 50 pd pc "red lt 60 fd 100 pc "black dot pu bk 100 rt 60
    goto_next_row
    pd pc "blue
    fd 100 pu fd 50 pd
    repeat (difference first :Xcounts 1) [ fd 50 pu fd 50 pd ]
    fd 100
]

;@-node:gmc.20080919000357.19:<< Top row >>
;@nl

epilogue
;@-node:gcross.20080918151436.5:@thin reduced-trihexagonal-compass.logo
;@-leo
